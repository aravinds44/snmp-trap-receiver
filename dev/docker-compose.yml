version: '3.8'

services:
  snmp-psql:
    image: postgres:15-alpine
    container_name: snmp-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-snmptraps}
      POSTGRES_USER: ${POSTGRES_USER:-snmpuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-snmppass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - snmp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-snmpuser} -d ${POSTGRES_DB:-snmptraps}"]
      interval: 10s
      timeout: 5s
      retries: 5

  snmptrapd:
    build:
      context: snmptrapd
    container_name: snmp-trapd
    ports:
      - "162:162/udp"
    volumes:
      - ./logs:/var/log/snmp:rw
      - ./mibs:/custom-mibs:ro
    environment:
      - MIBDIRS=/custom-mibs:/usr/share/snmp/mibs
      - MIBS=+ALL
      - SNMP_USER=${SNMP_USER:-snmpv3user}
      - SNMP_AUTH_PASS=${SNMP_AUTH_PASS:-authpassword123}
      - SNMP_PRIV_PASS=${SNMP_PRIV_PASS:-privpassword123}
    networks:
      - snmp-network
    depends_on:
      - trap-processor
    healthcheck:
      test: ["CMD", "pgrep", "snmptrapd"]
      interval: 30s
      timeout: 10s
      retries: 3

  trap-processor:
    build:
      context: trap-processor
    container_name: snmp-processor
    volumes:
      - ./logs:/app/logs:rw
    environment:
      - DB_HOST=snmp-psql
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB:-snmptraps}
      - DB_USER=${POSTGRES_USER:-snmpuser}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-snmppass}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    networks:
      - snmp-network
    depends_on:
      snmp-psql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import psycopg2; psycopg2.connect(host='postgres', database='${POSTGRES_DB:-snmptraps}', user='${POSTGRES_USER:-snmpuser}', password='${POSTGRES_PASSWORD:-snmppass}')"]
      interval: 30s
      timeout: 10s
      retries: 3

  trap-sender:
    build:
      context: trap-sender
    container_name: snmp-sender
    volumes:
      - ./mibs:/custom-mibs:ro
    environment:
      - SNMP_USER=${SNMP_USER:-snmpv3user}
      - SNMP_AUTH_PASS=${SNMP_AUTH_PASS:-authpassword123}
      - SNMP_PRIV_PASS=${SNMP_PRIV_PASS:-privpassword123}
      - TRAPD_HOST=snmptrapd
    networks:
      - snmp-network
    depends_on:
      - snmptrapd
    profiles:
      - testing

  grafana:
    image: grafana/grafana:latest
    container_name: snmp-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - snmp-network
    depends_on:
      snmp-psql:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  grafana_data:

networks:
  snmp-network:
    driver: bridge